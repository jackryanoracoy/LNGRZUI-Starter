{
  "title": "フォーム",
  "description": "フォームを作成し、ユーザー入力を処理する方法を学びます。",
  "meta": {
    "title": "LNGRZUI - フォーム コンポーネント",
    "description": "フォームを作成し、ユーザー入力を処理する方法を学びます。",
    "keywords": "コンポーネント ライブラリ、再利用可能なコンポーネント、ドキュメント、アプリケーション開発、UI ツールキット",
    "themecolor": "#424242"
  },
  "content": {
    "overview-title": "OVERVIEW | 概要",
    "overview-desc": "Form コンポーネントは、Web アプリケーション内でフォームを作成および管理するプロセスを簡素化します。 このページでは、Form コンポーネントを利用してユーザーフレンドリーでインタラクティブなフォームを構築する方法について説明します。 フォームの検証、入力フィールド、送信処理について説明しており、開発者がフォームの実装について包括的に理解できるようにします。",
    "how-to-title": "HOW TO USE | 使い方",
    "how-to-desc": "Form コンポーネントをプロジェクトにインポートし、提供された form 要素を使用してフォームの構造を定義します。 適切なルールと検証メッセージを設定して、フォーム検証を実装します。 イベント ハンドラーを使用してフォームの送信を処理し、フォーム データと対話します。 詳細な使用手順と例については、ドキュメントを参照してください。",
    "example-title": "EXAMPLE | 例",
    "code-title": "CODE | コード",
    "props-title": "PROPS | 小道具",
    "props-title-properties": "プロパティ",
    "props-title-type": "タイプ",
    "props-title-default": "デフォルト",
    "props-desc-properties-one": "onChange",
    "props-desc-type-one": "HTMLInputElement | HTMLTextAreaElement",
    "props-desc-default-one": "",
    "props-desc-properties-two": "onSubmit",
    "props-desc-type-two": "(data: { [key: string]: string }) => void",
    "props-desc-default-two": "",
    "props-desc-properties-three": "className",
    "props-desc-type-three": "string",
    "props-desc-default-three": "",
    "props-desc-properties-four": "label",
    "props-desc-type-four": "string",
    "props-desc-default-four": "",
    "props-desc-properties-five": "value",
    "props-desc-type-five": "string",
    "props-desc-default-five": "",
    "props-desc-properties-six": "placeholder",
    "props-desc-type-six": "string",
    "props-desc-default-six": "",
    "props-desc-properties-seven": "type",
    "props-desc-type-seven": "string",
    "props-desc-default-seven": "",
    "props-desc-properties-eight": "name",
    "props-desc-type-eight": "string",
    "props-desc-default-eight": "",
    "props-desc-properties-nine": "required",
    "props-desc-type-nine": "boolean",
    "props-desc-default-nine": "",
    "props-desc-properties-ten": "submitButtonLabel",
    "props-desc-type-ten": "string",
    "props-desc-default-ten": "Submit",
    "form-title": "サンプルフォーム",
    "input-text": "テキスト入力",
    "input-email": "メール入力",
    "input-number": "数値入力",
    "input-textarea": "テキストエリア",
    "placeholder-text": "ここにテキストを入力...",
    "placeholder-email": "ここにメールアドレスを入力...",
    "placeholder-number": "ここに数字を入力...",
    "placeholder-textarea": "ここに長いテキストを入力してください...",
    "submit-button": "送信",
    "sample-code": "import React from 'react';\nimport { Form } from 'ui';\n\nexport default function App() {\n  const handleSubmit = (formData: {[key: string]: string}) => {\n    console.log('Form submitted with data:', formData);\n  };\n  const inputs = [\n    {\n      name: 'text-input',\n      label: 'Text Input',\n      placeholder: 'Enter text here...',\n      type: 'text',\n      value: '',\n      required: true\n    },\n    {\n      name: 'email-input',\n      label: 'Email Input',\n      placeholder: 'Enter email here...',\n      type: 'email',\n      value: ''\n    },\n    {\n      name: 'number-input',\n      label: 'Number Input',\n      placeholder: 'Enter number here...',\n      type: 'number',\n      value: ''\n    }\n  ];\n\n  const textAreas = [\n    {\n      name: 'text-area',\n      label: 'Text Area',\n      placeholder: 'Enter long text here...',\n      value: ''\n    }\n  ];\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      inputs={inputs}\n      textAreas={textAreas}\n      submitButtonLabel=\"Submit\"\n    />\n  )\n}"
  }
}
