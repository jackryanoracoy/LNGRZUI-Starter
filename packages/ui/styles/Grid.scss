/*
 * Title       :   Grid Component
 * Author      :   Jack Ryan Oracoy
 * Description :   Style for the grid component
 */

@import 'variable';
@import 'mixin';

/*--------------------------------------------------
  Flex
--------------------------------------------------*/

.#{$pre}flex {
  display: flex;

  &.#{$mpre}wrap { flex-wrap: wrap; }
  &.#{$mpre}nowrap { flex-wrap: nowrap; }
  &.#{$mpre}wrap-reverse { flex-wrap: wrap-reverse; }

  &.#{$mpre}direction-row { flex-direction: row; }
  &.#{$mpre}direction-row-reverse { flex-direction: row-reverse; }

  &.#{$mpre}direction-column { flex-direction: column; }
  &.#{$mpre}direction-column-reverse { flex-direction: column-reverse; }

  &.#{$mpre}justify-flex-start { justify-content: flex-start; }
  &.#{$mpre}justify-flex-end { justify-content: flex-end; }
  &.#{$mpre}justify-center { justify-content: center; }
  &.#{$mpre}justify-space-around { justify-content: space-around; }
  &.#{$mpre}justify-space-between { justify-content: space-between; }
  &.#{$mpre}justify-space-evenly { justify-content: space-evenly; }

  &.#{$mpre}align-items-flex-start { align-items: flex-start; }
  &.#{$mpre}align-items-flex-end { align-items: flex-end; }
  &.#{$mpre}align-items-center { align-items: center; }
  &.#{$mpre}align-items-stretch { align-items: stretch; }
  &.#{$mpre}align-items-baseline { align-items: baseline; }

  &-item-auto { @include flex-col-width-auto(); }

  @for $count from 1 through $column-count {
    &-item-#{$count} { @include flex-col-width($count); }
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include media-breakpoint-min($breakpoint) {
      @for $count from 1 through $column-count {
        &-item-#{$breakpoint}-auto { @include flex-col-width-auto(); }
        &-item-#{$breakpoint}-#{$count} { @include flex-col-width($count); }
      }
    }
  }
}

/*--------------------------------------------------
  Gap
--------------------------------------------------*/

@for $count from 0 to 100 {
  $gap: $count * 5;

  .#{$pre}gap-#{$gap} {
    margin: calc(#{-#{$gap}px} / 2);

    & > div { padding: calc(#{#{$gap}px} / 2); }
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include media-breakpoint-min($breakpoint) {
      .#{$pre}gap-#{$breakpoint}-#{$gap} {
        margin: calc(#{-#{$gap}px} / 2);

        & > div { padding: calc(#{#{$gap}px} / 2); }
      }
    }
  }
}

/*--------------------------------------------------
  Offset
--------------------------------------------------*/

.#{$pre}offset-0 { margin-left: 0; }
.#{$pre}offset-auto { margin-left: auto; }

@for $count from 1 through 24 {
  .#{$pre}offset-#{$count} { @include offset($count); }
}

@each $breakpoint in map-keys($breakpoints) {
  @include media-breakpoint-min($breakpoint) {
    @for $count from 1 through 24 {
      .#{$pre}offset-#{$breakpoint}-0 { margin-left: 0; }
      .#{$pre}offset-#{$breakpoint}-auto { margin-left: auto; }
      .#{$pre}offset-#{$breakpoint}-#{$count} { @include offset($count); }
    }
  }
}

