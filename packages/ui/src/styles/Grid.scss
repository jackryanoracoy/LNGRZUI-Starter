/*
 * Title       :   Grid Component
 * Author      :   Jack Ryan Oracoy
 * Description :   Style for the grid component
 */

@import 'variable';
@import 'mixin';

/*--------------------------------------------------
  Flex
--------------------------------------------------*/

.flex {
  display: flex;

  &.is_wrap { flex-wrap: wrap; }
  &.is_nowrap { flex-wrap: nowrap; }
  &.is_wrap-reverse { flex-wrap: wrap-reverse; }

  &.is_direction-row { flex-direction: row; }
  &.is_direction-row-reverse { flex-direction: row-reverse; }

  &.is_direction-column { flex-direction: column; }
  &.is_direction-column-reverse { flex-direction: column-reverse; }

  &.is_justify-flex-start { justify-content: flex-start; }
  &.is_justify-flex-end { justify-content: flex-end; }
  &.is_justify-center { justify-content: center; }
  &.is_justify-space-around { justify-content: space-around; }
  &.is_justify-space-between { justify-content: space-between; }
  &.is_justify-space-evenly { justify-content: space-evenly; }

  &.is_align-items-flex-start { align-items: flex-start; }
  &.is_align-items-flex-end { align-items: flex-end; }
  &.is_align-items-center { align-items: center; }
  &.is_align-items-stretch { align-items: stretch; }
  &.is_align-items-baseline { align-items: baseline; }

  &-item-auto { @include flex-col-width-auto(); }

  @for $count from 1 through 24 {
    &-item-#{$count} { @include flex-col-width($count); }
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include media-breakpoint-min($breakpoint) {
      @for $count from 1 through 24 {
        &-item-#{$breakpoint}-#{$count} { @include flex-col-width($count); }
      }
    }
  }
}

/*--------------------------------------------------
  Gap
--------------------------------------------------*/

@for $count from 0 to 100 {
  $gap: $count * 5;

  .gap-#{$gap} {
    margin: calc(#{-#{$gap}px} / 2);

    & > div { padding: calc(#{#{$gap}px} / 2); }
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include media-breakpoint-min($breakpoint) {
      .gap-#{$breakpoint}-#{$gap} {
        margin: calc(#{-#{$gap}px} / 2);

        & > div { padding: calc(#{#{$gap}px} / 2); }
      }
    }
  }
}

/*--------------------------------------------------
  Offset
--------------------------------------------------*/

.offset-0 { margin-left: 0; }

@for $count from 1 through 12 {
  .offset-#{$count} { @include offset($count); }
}

@each $breakpoint in map-keys($breakpoints) {
  @include media-breakpoint-min($breakpoint) {
    @for $count from 1 through 12 {
      .offset-#{$breakpoint}-#{$count} { @include offset($count); }
    }
  }
}

